name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VDS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VDS_IP }} >> ~/.ssh/known_hosts

      - name: Build Docker Image
        run: |
          echo "NEXT_PUBLIC_API_URL=http://${{ secrets.VDS_IP }}" > .env
          docker build --no-cache --platform=linux/amd64 -t my-frontend-image .
          docker tag my-frontend-image ${{ secrets.DOCKER_USERNAME }}/my-frontend-image:latest

      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend-image:latest

      - name: Cleanup Docker Images and Volumes
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.VDS_IP }} << EOFMARK
          docker system prune -af --volumes || true
          EOFMARK

      - name: Deploy to VDS
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          VDS_IP: ${{ secrets.VDS_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.VDS_IP }} << EOFMARK
          docker pull $DOCKER_USERNAME/my-frontend-image:latest
          docker stop frontend-container || true
          docker rm frontend-container || true
          docker run -d \
            --name frontend-container \
            --restart always \
            -p 3001:3000 \
            $DOCKER_USERNAME/my-frontend-image:latest
          EOFMARK
